{"version":3,"file":"index.js","sources":["../src/client.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport type { WalletConnectModalConfig } from '@walletconnect/modal'\nimport { WalletConnectModal } from '@walletconnect/modal'\nimport SignClient from '@walletconnect/sign-client'\n\n// -- Types ----------------------------------------------------------------\nexport type WalletConnectModalSignSession = SignClient['session']['values'][number]\n\nexport interface WalletConnectModalSignOptions {\n  projectId: string\n  metadata: SignClient['metadata']\n  relayUrl?: string\n  modalOptions?: Omit<WalletConnectModalConfig, 'projectId' | 'walletConnectVersion'>\n}\n\nexport type WalletConnectModalSignConnectArguments = Parameters<SignClient['connect']>[0]\n\nexport type WalletConnectModalSignRequestArguments = Parameters<SignClient['request']>[0]\n\nexport type WalletConnectModalSignDisconnectArguments = Parameters<SignClient['disconnect']>[0]\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type WalletConnectModalEventCallback = (data: any) => void\n\n// -- Client ---------------------------------------------------------------\nexport class WalletConnectModalSign {\n  #options: WalletConnectModalSignOptions\n\n  #modal: WalletConnectModal\n\n  #initSignClientPromise?: Promise<void> = undefined\n\n  #signClient?: InstanceType<typeof SignClient> = undefined\n\n  public constructor(options: WalletConnectModalSignOptions) {\n    this.#options = options\n    this.#modal = this.#initModal()\n    this.#initSignClient()\n  }\n\n  // -- public ------------------------------------------------------------\n  public async connect(args: WalletConnectModalSignConnectArguments) {\n    const { requiredNamespaces, optionalNamespaces } = args\n\n    return new Promise<WalletConnectModalSignSession>(async (resolve, reject) => {\n      await this.#initSignClient()\n\n      const unsubscribeModal = this.#modal.subscribeModal(state => {\n        if (!state.open) {\n          unsubscribeModal()\n          reject(new Error('Modal closed'))\n        }\n      })\n\n      const { uri, approval } = await this.#signClient!.connect(args)\n\n      if (uri) {\n        const namespaceChains = new Set<string>()\n        if (requiredNamespaces) {\n          Object.values(requiredNamespaces).forEach(({ chains }) => {\n            if (chains) {\n              chains.forEach(chain => namespaceChains.add(chain))\n            }\n          })\n        }\n        if (optionalNamespaces) {\n          Object.values(optionalNamespaces).forEach(({ chains }) => {\n            if (chains) {\n              chains.forEach(chain => namespaceChains.add(chain))\n            }\n          })\n        }\n        await this.#modal.openModal({ uri, chains: Array.from(namespaceChains) })\n      }\n\n      try {\n        const session = await approval()\n        resolve(session)\n      } catch (err) {\n        reject(err)\n      } finally {\n        unsubscribeModal()\n        this.#modal.closeModal()\n      }\n    })\n  }\n\n  public async disconnect(args: WalletConnectModalSignDisconnectArguments) {\n    await this.#initSignClient()\n    await this.#signClient!.disconnect(args)\n  }\n\n  public async request<Result>(args: WalletConnectModalSignRequestArguments) {\n    await this.#initSignClient()\n\n    const result = await this.#signClient!.request(args)\n\n    return result as Result\n  }\n\n  public async getSessions() {\n    await this.#initSignClient()\n\n    return this.#signClient!.session.getAll()\n  }\n\n  public async getSession() {\n    await this.#initSignClient()\n\n    return this.#signClient!.session.getAll().at(-1)\n  }\n\n  public async onSessionEvent(callback: WalletConnectModalEventCallback) {\n    await this.#initSignClient()\n    this.#signClient!.on('session_event', callback)\n  }\n\n  public async offSessionEvent(callback: WalletConnectModalEventCallback) {\n    await this.#initSignClient()\n    this.#signClient!.off('session_event', callback)\n  }\n\n  public async onSessionUpdate(callback: WalletConnectModalEventCallback) {\n    await this.#initSignClient()\n    this.#signClient!.on('session_update', callback)\n  }\n\n  public async offSessionUpdate(callback: WalletConnectModalEventCallback) {\n    await this.#initSignClient()\n    this.#signClient!.off('session_update', callback)\n  }\n\n  public async onSessionDelete(callback: WalletConnectModalEventCallback) {\n    await this.#initSignClient()\n    this.#signClient!.on('session_delete', callback)\n  }\n\n  public async offSessionDelete(callback: WalletConnectModalEventCallback) {\n    await this.#initSignClient()\n    this.#signClient!.off('session_delete', callback)\n  }\n\n  public async onSessionExpire(callback: WalletConnectModalEventCallback) {\n    await this.#initSignClient()\n    this.#signClient!.on('session_expire', callback)\n  }\n\n  public async offSessionExpire(callback: WalletConnectModalEventCallback) {\n    await this.#initSignClient()\n    this.#signClient!.off('session_expire', callback)\n  }\n\n  // -- private -----------------------------------------------------------\n  #initModal() {\n    const { modalOptions, projectId } = this.#options\n\n    return new WalletConnectModal({\n      ...modalOptions,\n      projectId\n    })\n  }\n\n  async #initSignClient() {\n    if (this.#signClient) {\n      return true\n    }\n\n    if (!this.#initSignClientPromise && typeof window !== 'undefined') {\n      this.#initSignClientPromise = this.#createSignClient()\n    }\n\n    return this.#initSignClientPromise\n  }\n\n  async #createSignClient() {\n    this.#signClient = await SignClient.init({\n      metadata: this.#options.metadata,\n      projectId: this.#options.projectId,\n      relayUrl: this.#options.relayUrl\n    })\n    const clientId = await this.#signClient.core.crypto.getClientId()\n    try {\n      localStorage.setItem('WCM_WALLETCONNECT_CLIENT_ID', clientId)\n    } catch {\n      console.info('Unable to set client id')\n    }\n  }\n}\n"],"names":[],"mappings":"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"}